@model Application.Web.Models.ReconciliationSummary

@{
    ViewBag.Title = "Edit Reconciliation Summary";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<ul class="breadcrumb">
    <li>@Html.ActionLink("Home", "Index")<span class="divider">/</span></li>
    <li>@Html.ActionLink("Reconciliation Summary", "ReconciliationReport")
        <span class="divider">/</span></li>
    <li class="active">Edit Reconciliation Summary</li>
</ul>

<div class="container-fluid">
    <div class="row-fluid">
        <div class="alert">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <strong>Note: </strong>@ViewBag.info
        </div>

        <div class="row-fluid sortable ui-sortable">
            <div class="box span12">
                <div class="box-header well" data-original-title="Contribution Schedule Format">
                    <h2><i class="icon-edit"></i>Edit Reconciliation Summary</h2>
                </div>
                <div class="box-content">
                    <div class="row-fluid">

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
    
                            <div class="well form-horizontal span6" style="margin-top: 10px;">
                                <h5 style="margin: 3px;">Edit Contribution Schedule for @ViewBag.surname </h5>
                                <hr style="margin: 3px;" />
                                @Html.ValidationSummary(true)
                                @Html.HiddenFor(model => model.Id)
                                @Html.HiddenFor(model => model.DistrictId)
                                @Html.HiddenFor(model => model.UserPosted)
                                @Html.HiddenFor(model => model.DatePosted)
                                @Html.HiddenFor(model => model.DistrictCode)
                                @Html.HiddenFor(model => model.DistrictName)                                
                                @Html.HiddenFor(model => model.PayMonth)
                                @Html.HiddenFor(model => model.PayYear)

                                <div class="control-group" style="margin-bottom: 10px; margin-top: 15px;">
                                    <label class="control-label">District Code:</label>
                                    <label class="control-label label marginleft" style="width: 211px;">@Model.DistrictCode</label>
                                </div>
                                <div class="control-group" style="margin-bottom: 10px;">
                                    <label class="control-label">District:</label>
                                    <label class="control-label label marginleft" style="width: 211px;">@Model.DistrictName</label>
                                </div>
                                <div class="control-group" style="margin-bottom: 10px;">
                                    <label class="control-label">Pay Month:</label>
                                    <label class="control-label label marginleft" style="width: 211px;">@Model.PayMonth</label>
                                </div>
                                <div class="control-group" style="margin-bottom: 10px;">
                                    <label class="control-label">Pay Year:</label>
                                    <label class="control-label label marginleft" style="width: 211px;">@Model.PayYear</label>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Remittance:</label>
                                    <div class="controls">
                                        @Html.EditorFor(model => model.Remittance)
                                        @Html.ValidationMessageFor(model => model.Remittance)
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Schedule:</label>
                                    <div class="controls">
                                        @Html.EditorFor(model => model.Schedule)
                                        @Html.ValidationMessageFor(model => model.Schedule)
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Service Charge:</label>
                                    <div class="controls">
                                        @Html.EditorFor(model => model.ServiceCharge)
                                        @Html.ValidationMessageFor(model => model.ServiceCharge)
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Net Schedule:</label>
                                    <div class="controls">
                                        @Html.EditorFor(model => model.NetSchedule)
                                        @Html.ValidationMessageFor(model => model.NetSchedule)
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Debit:</label>
                                    <div class="controls">
                                        @Html.EditorFor(model => model.Debit)
                                        @Html.ValidationMessageFor(model => model.Debit)
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Credit:</label>
                                    <div class="controls">
                                        @Html.EditorFor(model => model.Credit)
                                        @Html.ValidationMessageFor(model => model.Credit)
                                    </div>
                                </div>
                                <div class="control-group">
                                    <label class="control-label">Balance:</label>
                                    <div class="controls">
                                        @Html.EditorFor(model => model.Balance)
                                        @Html.ValidationMessageFor(model => model.Balance)
                                    </div>
                                </div>                                

                                <div class="form-actions" style="margin-bottom: 0px;">
                                    <button class="btn btn-primary" title="Update record" type="submit">Save</button>
                                    <button class="btn btn-default" title="Go to previous page" type="button"
                                        onclick="location.href='@Session["ReturnUrl"].ToString()'">
                                        Cancel</button>                                    
                                </div>
                            </div>                               
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        var cred;
        var deb;
        var bala;

        $(document).ready(function () {
            
            cred = parseFloat($('#Credit').val());
            deb = parseFloat($('#Debit').val());
            bala = parseFloat($('#Balance').val());

            $('#Remittance').change(updateFields);

            $('#Schedule').attr("readonly", true);
            $('#ServiceCharge').attr("readonly", true);
            $('#NetSchedule').attr("readonly", true);
            $('#Debit').attr("readonly", true);
            $('#Credit').attr("readonly", true);
            $('#Balance').attr("readonly", true);
        });

        function updateFields() {

            if(cred >0 || bala ==0)
            {
                var remit = parseFloat($('#Remittance').val());

                $('#Balance').val((bala + remit).toFixed(2));
                $('#Credit').val((cred + remit).toFixed(2));
                $('#Debit').val(0.0);
            }
            if(deb <0)
            {
                var remit = parseFloat($('#Remittance').val());
                var variation = deb + remit;

                if(variation>0)
                {
                    $('#Balance').val(variation.toFixed(2));
                    $('#Credit').val(variation.toFixed(2));
                    $('#Debit').val(0.0);
                }
                else if(variation<0)
                {
                    $('#Balance').val(variation.toFixed(2));
                    $('#Credit').val(0.0);
                    $('#Debit').val(variation.toFixed(2));
                }
                else
                {
                    $('#Balance').val(0.0);
                    $('#Credit').val(0.0);
                    $('#Debit').val(0.0);
                }           
            }
        }
    </script>
}