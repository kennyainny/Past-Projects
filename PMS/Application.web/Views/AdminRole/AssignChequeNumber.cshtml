@model IEnumerable<Application.Web.Models.MinisterProfile>

@using GridMvc.Html;

@{
    ViewBag.Title = "Assign Cheque Number For Minister";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<ul class="breadcrumb">
    <li>
        @Html.ActionLink("Home", "Index", "AdminRole")
        <span class="divider">/</span>
    </li>
    <li>
        @Html.ActionLink("Manage Minister", "ManageMinister", "AdminRole")
        <span class="divider">/</span>
    </li>
    <li>
        @Html.ActionLink("Exited Ministers", "ExitedMinisters", "AdminRole")
        <span class="divider">/</span>
    </li>
    <li class="active">Assign Cheque Number</li>
</ul>
<div class="container-fluid">
    <div class="row-fluid">
        <div class="alert">
            <button type="button" class="close" data-dismiss="alert">×</button>
            <strong>Note: </strong>@ViewBag.info
        </div>


        <div class="row-fluid sortable ui-sortable">
            <div class="box span12">

                <div class="box-header well" data-original-title="Manage Ministers"
                     style="">
                    <h2><i class="fa fa-list-alt"></i> Assiign Cheque Number</h2>
                    <span class="label label-warning" style="float: right; margin-top: 4px;">+@Model.Count()</span>
                </div>
                <div class="box-content">
                    <div class="row-fluid">

                        <form method="post" action="PayoffReport">

                            @*@ViewBag.Selected*@
                            <br />
                            @Html.Grid(Model).Columns(columns =>
                       {

                           columns.Add(c => c.MinisterCode).Titled("Code").Css("code-bold");



                           //.Sortable(true).Filterable(true)
                           columns.Add(c => c.Surname).Titled("Surname");//.Filterable(true).Sortable(true);
                           columns.Add(c => c.OtherName).Titled("Othernames");//.Filterable(true).Sortable(true);
                           columns.Add(c => c.DistrictId).Titled("District");//.Filterable(true).Sortable(true);
                           //columns.Add(c => c.Status).Titled("Exit Mode");//.Filterable(true).Sortable(true);
                           columns.Add(c => c.ExitReason).Titled("Exit Reason");//.Filterable(true).Sortable(true);
                           columns.Add()
                                   .Encoded(false)
                                   .Sanitized(false).Titled("Cheque Number")
                               //.SetWidth(30)
                                   .RenderValueAs
                                   (c => @Html.EditorFor(modelItem => c.nCheque));



                           columns.Add()
                                   .Encoded(false)
                                   .Sanitized(false)
                               .SetWidth(0)
                                   .RenderValueAs
                                   (c => @Html.HiddenFor(modelItem => c.Id));
                                   
                                
                           columns.Add()
                                   .Encoded(false)
                                   .Sanitized(false)
                                   .Css("display:none")
                               //.SetWidth(30)
                                   .RenderValueAs
                                   (c => @<input class="selectbx" name="selc" type="hidden" value="@c.MinisterCode">);

                           TempData["Selected"] = Request["chkBox"];
                           Html.Hidden("sellc", TempData["Selected"]);

                           /* Adding not mapped column, that renders body, using inline Razor html helper */
                        @* columns.Add()
              .Encoded(false)
              .Sanitized(false)
          //.SetWidth(30)
              .RenderValueAs
              (d => @<a class="btn btn-success" href="@Url.Action("EditMinister", new { id = d.Id })">
                  <i class="fa fa-edit icon-white"></i> Edit </a>);

        columns.Add()
              .Encoded(false)
              .Sanitized(false)
          //.SetWidth(30)
              .RenderValueAs
              (d => @<a class="btn btn-warning" href="@Url.Action("ExitMinister", new { id = d.Id })">
                  <i class="fa fa-cut icon-white"></i> Exit </a>);
                        *@
                                
                       })



                            <div class="form-actions" style="margin-bottom: 0px; ">
                                <span style="float:right; margin-right:100px">



                                    <button class="btn btn-info" id="saveCheque" title="Update Cheque Details" style="margin-left: 5px;">
                                        <i class="fa fa-share-square-o"></i> Save
                                    </button>


                                    @*<button class="btn btn-primary" title="Update record" type="submit">Save</button>*@
                                    <button class="btn btn-default" title="Go to previous page" type="button"
                                            onclick="location.href='ExitedMinisters'">
                                        Cancel
                                    </button>
                                </span>
                            </div>
                        </form>
</div>
                </div>
            </div>
        </div>
    </div>
    </div>
